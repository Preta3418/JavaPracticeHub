plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.prgrms'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// SMTP
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3', 'io.jsonwebtoken:jjwt-jackson:0.12.3'


	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// spring web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// devtools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// DB
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'mysql:mysql-connector-java:8.0.33'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// WebSocket + STOMP
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// MongoDB
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	//OAuth2.0
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// Spring Cache - caffeine
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'com.github.ben-manes.caffeine:caffeine'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaExec) {
	jvmArgs += ['--add-opens', 'java.base/java.io=ALL-UNNAMED']
}

test {
	jvmArgs += ['--add-opens', 'java.base/java.io=ALL-UNNAMED']
}
